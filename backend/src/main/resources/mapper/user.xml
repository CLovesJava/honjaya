<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.ssafy.honjaya.model.mapper.UserMapper">

	<!-- 회원의 수 확인 -->
	<select id="findUser" parameterType="int" resultType="int">
	select count(*)
	from user
	where user_no=#{userNo}
	</select>
	
	<!-- 회원의 수 확인(이메일 중복 확인 등) -->
	<select id="findUserByEmail" parameterType="int" resultType="int">
	select count(*)
	from user
	where user_email=#{userEmail}
	</select>
	
	<!-- 회원의 수 확인(닉네임 중복 확인) -->
	<select id="findUserByNickname" parameterType="int" resultType="int">
	select count(*)
	from user
	where user_nickname=#{userNickname}
	</select>

	<!-- 회원 가입 -->
	<insert id="doSignUp" parameterType="UserDto">
	insert into user(user_email, user_password, user_nickname, user_name, user_birthday, user_gender, user_phone, user_profile_pic_url)
	values (#{userEmail}, #{userPassword}, #{userNickname}, #{userName}, #{userBirthday}, #{userGender}, #{userPhone}, #{userProfilePicUrl})
	</insert>
	
	<!-- 로그인 -->
	<select id="doLogin" parameterType="map" resultType="UserDto">
	select user_no, user_email, user_nickname, user_name, user_birthday, user_gender, user_profile_pic_url, user_point
	from user
	where user_email=#{userEmail} and user_password=#{userPassword}
	</select>
	
	<!-- 전체 회원 정보 가져오기 -->
	<select id="allUserInfo" resultType="UserDto">
	select user_no, user_password, user_nickname, user_name, user_birthday, user_gender, user_phone, user_profile_pic_url, user_reg_time, user_point
	from user
	</select>
	
	<!-- 회원 정보 1개 가져오기 -->
	<select id="userInfo" parameterType="int" resultType="UserDto">
	select user_no, user_email, user_password, user_nickname, user_birthday, user_gender, user_phone, user_profile_pic_url, user_reg_time, user_point
	from user
	where user_no=#{userNo}
	</select>
	
	<!-- 회원 정보 수정 -->
	<update id="userUpdate" parameterType="UserDto">
	update user
	set user_email=#{userEmail}, user_password=#{userPassword}, user_nickname=#{userNickname}, user_name=#{userName}, user_birthday=#{userBirthday},
	user_gender=#{userGender}, user_phone=#{userGender}, user_profile_pic_url=#{userProfilePicUrl}
	where user_no=#{userNo}
	</update>
	
	<!-- 회원 정보 삭제 -->
	<delete id="userDelete" parameterType="int">
	delete from user
	where user_no=#{userNo}
	</delete>
	
	<select id = "getRefreshToken" parameterType = "int" resultType = "String">
		select user_token
		from user
		where user_no = #{userNo}
	</select>
	
	<update id="saveRefreshToken" parameterType = "UserDto">
		update user
		set user_token = #{userToken}
		where user_email = #{userEmail}
	</update>
	
	<update id="deleteRefreshToken" parameterType = "UserDto">
		update user
		set token = #{token, jdbcType=VARCHAR}
		where user_email = #{userEmail}
	</update>
	
</mapper>